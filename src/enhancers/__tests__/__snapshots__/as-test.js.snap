// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates component 1`] = `
Array [
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "span",
]
`;

exports[`creates component 2`] = `
<Base.as(span)>
  <Reas
    as={
      Array [
        [Function],
        "span",
      ]
    }
  >
    <Base
      as={[Function]}
      nextAs={
        Array [
          "span",
        ]
      }
    >
      <Next
        id="Base"
        nextAs={
          Array [
            "span",
          ]
        }
      >
        <Reas
          as={
            Array [
              "span",
            ]
          }
          id="Base"
        >
          <span
            id="Base"
          />
        </Reas>
      </Next>
    </Base>
  </Reas>
</Base.as(span)>
`;

exports[`creates component 3`] = `

<span id="Base">
</span>

`;

exports[`creates component by extending another one with extend 1`] = `
Array [
  "styled(Derivative.as(div))",
  "Derivative.as(div)",
  "Reas",
  "Derivative",
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "Next",
  "Reas",
  "div",
]
`;

exports[`creates component by extending another one with extend 2`] = `
<styled(Derivative.as(div))>
  <Derivative.as(div)
    className="sc-bwzfXH uTxCW"
  >
    <Reas
      as={
        Array [
          [Function],
          "div",
        ]
      }
      className="sc-bwzfXH uTxCW"
    >
      <Derivative
        as={[Function]}
        className="sc-bwzfXH uTxCW"
        nextAs={
          Array [
            "div",
          ]
        }
      >
        <Base.as(span)
          as={[Function]}
          className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
          nextAs={
            Array [
              "div",
            ]
          }
        >
          <Reas
            as={
              Array [
                [Function],
                "span",
                [Function],
                "div",
              ]
            }
            className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
          >
            <Base
              as={[Function]}
              className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
              nextAs={
                Array [
                  [Function],
                  "div",
                ]
              }
            >
              <Next
                className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
                id="Base"
                nextAs={
                  Array [
                    [Function],
                    "div",
                  ]
                }
              >
                <Reas
                  as={
                    Array [
                      [Function],
                      "div",
                    ]
                  }
                  className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
                  id="Base"
                >
                  <Next
                    as={[Function]}
                    className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
                    id="Base"
                    nextAs={
                      Array [
                        "div",
                      ]
                    }
                  >
                    <Reas
                      as={
                        Array [
                          "div",
                        ]
                      }
                      className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
                      id="Base"
                    >
                      <div
                        className="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
                        id="Base"
                      />
                    </Reas>
                  </Next>
                </Reas>
              </Next>
            </Base>
          </Reas>
        </Base.as(span)>
      </Derivative>
    </Reas>
  </Derivative.as(div)>
</styled(Derivative.as(div))>
`;

exports[`creates component by extending another one with extend 3`] = `

<div class="sc-bwzfXH uTxCW sc-bdVaJa bDWFJH"
     id="Base"
>
</div>

`;

exports[`creates component by extending another one with styled 1`] = `
Array [
  "styled(Derivative.as(div))",
  "Derivative.as(div)",
  "Reas",
  "Derivative",
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "Next",
  "Reas",
  "div",
]
`;

exports[`creates component by extending another one with styled 2`] = `
<styled(Derivative.as(div))>
  <Derivative.as(div)
    className="as-test__Derivative-dFAIVE bDuygA"
  >
    <Reas
      as={
        Array [
          [Function],
          "div",
        ]
      }
      className="as-test__Derivative-dFAIVE bDuygA"
    >
      <Derivative
        as={[Function]}
        className="as-test__Derivative-dFAIVE bDuygA"
        nextAs={
          Array [
            "div",
          ]
        }
      >
        <Base.as(span)
          as={[Function]}
          className="as-test__Derivative-dFAIVE bDuygA as-test__Derivative-dFAIVE bDuygA"
          nextAs={
            Array [
              "div",
            ]
          }
        >
          <Reas
            as={
              Array [
                [Function],
                "span",
                [Function],
                "div",
              ]
            }
            className="as-test__Derivative-dFAIVE bDuygA as-test__Derivative-dFAIVE bDuygA"
          >
            <Base
              as={[Function]}
              className="as-test__Derivative-dFAIVE bDuygA as-test__Derivative-dFAIVE bDuygA"
              nextAs={
                Array [
                  [Function],
                  "div",
                ]
              }
            >
              <Next
                className="as-test__Derivative-dFAIVE bDuygA as-test__Derivative-dFAIVE bDuygA"
                id="Base"
                nextAs={
                  Array [
                    [Function],
                    "div",
                  ]
                }
              >
                <Reas
                  as={
                    Array [
                      [Function],
                      "div",
                    ]
                  }
                  className="as-test__Derivative-dFAIVE bDuygA as-test__Derivative-dFAIVE bDuygA"
                  id="Base"
                >
                  <Next
                    as={[Function]}
                    className="as-test__Derivative-dFAIVE bDuygA as-test__Derivative-dFAIVE bDuygA"
                    id="Base"
                    nextAs={
                      Array [
                        "div",
                      ]
                    }
                  >
                    <Reas
                      as={
                        Array [
                          "div",
                        ]
                      }
                      className="as-test__Derivative-dFAIVE bDuygA as-test__Derivative-dFAIVE bDuygA"
                      id="Base"
                    >
                      <div
                        className="as-test__Derivative-dFAIVE bDuygA"
                        id="Base"
                      />
                    </Reas>
                  </Next>
                </Reas>
              </Next>
            </Base>
          </Reas>
        </Base.as(span)>
      </Derivative>
    </Reas>
  </Derivative.as(div)>
</styled(Derivative.as(div))>
`;

exports[`creates component by extending another one with styled 3`] = `

<div class="as-test__Derivative-dFAIVE bDuygA"
     id="Base"
>
</div>

`;

exports[`creates component passing property as 1`] = `
Array [
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "div",
]
`;

exports[`creates component passing property as 2`] = `
<Base.as(span)
  as="div"
>
  <Reas
    as={
      Array [
        [Function],
        "span",
        "div",
      ]
    }
  >
    <Base
      as={[Function]}
      nextAs={
        Array [
          "div",
        ]
      }
    >
      <Next
        id="Base"
        nextAs={
          Array [
            "div",
          ]
        }
      >
        <Reas
          as={
            Array [
              "div",
            ]
          }
          id="Base"
        >
          <div
            id="Base"
          />
        </Reas>
      </Next>
    </Base>
  </Reas>
</Base.as(span)>
`;

exports[`creates component passing property as 3`] = `

<div id="Base">
</div>

`;

exports[`creates component passing property as with another component 1`] = `
Array [
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "Derivative",
  "div",
]
`;

exports[`creates component passing property as with another component 2`] = `
<Base.as(span)
  as={[Function]}
>
  <Reas
    as={
      Array [
        [Function],
        "span",
        [Function],
      ]
    }
  >
    <Base
      as={[Function]}
      nextAs={
        Array [
          [Function],
        ]
      }
    >
      <Next
        id="Base"
        nextAs={
          Array [
            [Function],
          ]
        }
      >
        <Reas
          as={
            Array [
              [Function],
            ]
          }
          id="Base"
        >
          <Derivative
            id="Base"
          >
            <div
              id="Base"
            />
          </Derivative>
        </Reas>
      </Next>
    </Base>
  </Reas>
</Base.as(span)>
`;

exports[`creates component passing property as with another component 3`] = `

<div id="Base">
</div>

`;

exports[`creates component passing property as with array of components 1`] = `
Array [
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "Derivative",
  "Next",
  "Reas",
  "p",
]
`;

exports[`creates component passing property as with array of components 2`] = `
<Base.as(span)
  as={
    Array [
      [Function],
      "p",
    ]
  }
>
  <Reas
    as={
      Array [
        [Function],
        "span",
        [Function],
        "p",
      ]
    }
  >
    <Base
      as={[Function]}
      nextAs={
        Array [
          [Function],
          "p",
        ]
      }
    >
      <Next
        id="Base"
        nextAs={
          Array [
            [Function],
            "p",
          ]
        }
      >
        <Reas
          as={
            Array [
              [Function],
              "p",
            ]
          }
          id="Base"
        >
          <Derivative
            as={[Function]}
            id="Base"
            nextAs={
              Array [
                "p",
              ]
            }
          >
            <Next
              id="Derivative"
              nextAs={
                Array [
                  "p",
                ]
              }
            >
              <Reas
                as={
                  Array [
                    "p",
                  ]
                }
                id="Derivative"
              >
                <p
                  id="Derivative"
                />
              </Reas>
            </Next>
          </Derivative>
        </Reas>
      </Next>
    </Base>
  </Reas>
</Base.as(span)>
`;

exports[`creates component passing property as with array of components 3`] = `

<p id="Derivative">
</p>

`;

exports[`creates component using as static method 1`] = `
Array [
  "Base.as(span).as(p)",
  "Reas",
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "Next",
  "Reas",
  "p",
]
`;

exports[`creates component using as static method 2`] = `
<Base.as(span).as(p)>
  <Reas
    as={
      Array [
        [Function],
        "p",
      ]
    }
  >
    <Base.as(span)
      as={[Function]}
      nextAs={
        Array [
          "p",
        ]
      }
    >
      <Reas
        as={
          Array [
            [Function],
            "span",
            [Function],
            "p",
          ]
        }
      >
        <Base
          as={[Function]}
          nextAs={
            Array [
              [Function],
              "p",
            ]
          }
        >
          <Next
            id="Base"
            nextAs={
              Array [
                [Function],
                "p",
              ]
            }
          >
            <Reas
              as={
                Array [
                  [Function],
                  "p",
                ]
              }
              id="Base"
            >
              <Next
                as={[Function]}
                id="Base"
                nextAs={
                  Array [
                    "p",
                  ]
                }
              >
                <Reas
                  as={
                    Array [
                      "p",
                    ]
                  }
                  id="Base"
                >
                  <p
                    id="Base"
                  />
                </Reas>
              </Next>
            </Reas>
          </Next>
        </Base>
      </Reas>
    </Base.as(span)>
  </Reas>
</Base.as(span).as(p)>
`;

exports[`creates component using as static method 3`] = `

<p id="Base">
</p>

`;

exports[`creates component using as static method with array of components 1`] = `
Array [
  "Base.as(span).as(Derivative,p)",
  "Reas",
  "Base.as(span)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "Next",
  "Reas",
  "Derivative",
  "Next",
  "Reas",
  "p",
]
`;

exports[`creates component using as static method with array of components 2`] = `
<Base.as(span).as(Derivative,p)>
  <Reas
    as={
      Array [
        [Function],
        [Function],
        "p",
      ]
    }
  >
    <Base.as(span)
      as={[Function]}
      nextAs={
        Array [
          [Function],
          "p",
        ]
      }
    >
      <Reas
        as={
          Array [
            [Function],
            "span",
            [Function],
            [Function],
            "p",
          ]
        }
      >
        <Base
          as={[Function]}
          nextAs={
            Array [
              [Function],
              [Function],
              "p",
            ]
          }
        >
          <Next
            id="Base"
            nextAs={
              Array [
                [Function],
                [Function],
                "p",
              ]
            }
          >
            <Reas
              as={
                Array [
                  [Function],
                  [Function],
                  "p",
                ]
              }
              id="Base"
            >
              <Next
                as={[Function]}
                id="Base"
                nextAs={
                  Array [
                    [Function],
                    "p",
                  ]
                }
              >
                <Reas
                  as={
                    Array [
                      [Function],
                      "p",
                    ]
                  }
                  id="Base"
                >
                  <Derivative
                    as={[Function]}
                    id="Base"
                    nextAs={
                      Array [
                        "p",
                      ]
                    }
                  >
                    <Next
                      id="Derivative"
                      nextAs={
                        Array [
                          "p",
                        ]
                      }
                    >
                      <Reas
                        as={
                          Array [
                            "p",
                          ]
                        }
                        id="Derivative"
                      >
                        <p
                          id="Derivative"
                        />
                      </Reas>
                    </Next>
                  </Derivative>
                </Reas>
              </Next>
            </Reas>
          </Next>
        </Base>
      </Reas>
    </Base.as(span)>
  </Reas>
</Base.as(span).as(Derivative,p)>
`;

exports[`creates component using as static method with array of components 3`] = `

<p id="Derivative">
</p>

`;

exports[`creates component with array of components 1`] = `
Array [
  "Base.as(Derivative,p)",
  "Reas",
  "Base",
  "Next",
  "Reas",
  "Derivative",
  "Next",
  "Reas",
  "p",
]
`;

exports[`creates component with array of components 2`] = `
<Base.as(Derivative,p)>
  <Reas
    as={
      Array [
        [Function],
        [Function],
        "p",
      ]
    }
  >
    <Base
      as={[Function]}
      nextAs={
        Array [
          [Function],
          "p",
        ]
      }
    >
      <Next
        id="Base"
        nextAs={
          Array [
            [Function],
            "p",
          ]
        }
      >
        <Reas
          as={
            Array [
              [Function],
              "p",
            ]
          }
          id="Base"
        >
          <Derivative
            as={[Function]}
            id="Base"
            nextAs={
              Array [
                "p",
              ]
            }
          >
            <Next
              id="Derivative"
              nextAs={
                Array [
                  "p",
                ]
              }
            >
              <Reas
                as={
                  Array [
                    "p",
                  ]
                }
                id="Derivative"
              >
                <p
                  id="Derivative"
                />
              </Reas>
            </Next>
          </Derivative>
        </Reas>
      </Next>
    </Base>
  </Reas>
</Base.as(Derivative,p)>
`;

exports[`creates component with array of components 3`] = `

<p id="Derivative">
</p>

`;

exports[`passes down elementRef 1`] = `
<span
  id="Base"
/>
`;

exports[`passes down elementRef when extended 1`] = `
<span
  class="sc-htpNat KtFsv"
  id="Base"
/>
`;

exports[`renders SVG element 1`] = `

<circle id="Base">
</circle>

`;

exports[`renders with dangerouslySetInnerHTML 1`] = `

<span id="Base">
  <b>
    Hello
  </b>
</span>

`;

exports[`renders with style 1`] = `

<span id="Base"
      style="position:absolute"
>
</span>

`;

exports[`renders with style passing property as with another component 1`] = `

<div id="Derivate"
     style="position:absolute"
>
</div>

`;
