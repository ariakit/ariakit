import { expect, test } from "@playwright/test";

test.beforeEach(async ({ page }) => {
  await page.goto("/previews/composite-menus");
});

test("keyboard interactions", async ({ page }) => {
  const a1 = page.getByText("Button A1");
  const a2Menu = page.getByText("Menu A2");
  const b2Menu = page.getByText("Menu B2");
  const c2Menu = page.getByText("Menu C2");
  const c3 = page.getByText("Button C3");
  await expect(a1).toBeVisible();
  await expect(a1).not.toBeFocused();
  a1.focus();
  await expect(a1).toBeFocused();
  await page.keyboard.press("ArrowRight");
  await expect(a2Menu).toBeVisible();
  await expect(a1).not.toBeFocused();
  await expect(a2Menu).toBeFocused();
  await page.keyboard.press("ArrowRight");
  await expect(a2Menu).not.toBeFocused();
  await page.keyboard.press("ArrowLeft");
  await expect(a2Menu).toBeFocused();
  await expect(a2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("Enter");
  await expect(a2Menu).toHaveAttribute("aria-expanded", "true");
  await page.keyboard.press("Escape");
  await expect(a2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("ArrowUp");
  await expect(a2Menu).toHaveAttribute("aria-expanded", "true");
  await page.keyboard.press("Escape");
  await expect(a2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("ArrowDown");
  await expect(a2Menu).toHaveAttribute("aria-expanded", "false");
  await expect(a2Menu).not.toBeFocused();
  await expect(b2Menu).toBeVisible();
  await expect(b2Menu).toBeFocused();
  await page.keyboard.press("ArrowRight");
  await expect(b2Menu).not.toBeFocused();
  await page.keyboard.press("ArrowLeft");
  await expect(b2Menu).toBeFocused();
  await expect(b2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("Enter");
  await expect(b2Menu).toHaveAttribute("aria-expanded", "true");
  await page.keyboard.press("Escape");
  await expect(b2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("ArrowUp");
  await expect(b2Menu).toHaveAttribute("aria-expanded", "false");
  await expect(b2Menu).not.toBeFocused();
  await expect(a2Menu).toBeFocused();
  await page.keyboard.press("ArrowDown");
  await expect(a2Menu).not.toBeFocused();
  await expect(b2Menu).toBeFocused();
  await expect(b2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("ArrowDown");
  await expect(b2Menu).toHaveAttribute("aria-expanded", "false");
  await expect(b2Menu).not.toBeFocused();
  await expect(c2Menu).toBeVisible();
  await expect(c2Menu).toBeFocused();
  await page.keyboard.press("ArrowRight");
  await expect(c2Menu).not.toBeFocused();
  await page.keyboard.press("ArrowLeft");
  await expect(c2Menu).toBeFocused();
  await expect(c2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("Enter");
  await expect(c2Menu).toHaveAttribute("aria-expanded", "true");
  await page.keyboard.press("Escape");
  await expect(c2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("ArrowUp");
  await expect(c2Menu).toHaveAttribute("aria-expanded", "false");
  await expect(c2Menu).not.toBeFocused();
  await expect(b2Menu).toBeFocused();
  await page.keyboard.press("ArrowDown");
  await expect(b2Menu).not.toBeFocused();
  await expect(c2Menu).toBeFocused();
  await expect(c2Menu).toHaveAttribute("aria-expanded", "false");
  await page.keyboard.press("ArrowDown");
  await expect(c2Menu).toHaveAttribute("aria-expanded", "true");
  await page.keyboard.press("Escape");
  await expect(c2Menu).toHaveAttribute("aria-expanded", "false");
  await expect(c2Menu).toBeFocused();
  await page.keyboard.press("ArrowRight");
  await expect(c2Menu).not.toBeFocused();
  await expect(c3).toBeVisible();
  await expect(c3).toBeFocused();
});
