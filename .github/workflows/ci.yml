name: ci

on:
  push:
    branches: [main, next, v*]
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --ignore-scripts

  lint:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --ignore-scripts

      - name: Lint
        run: npm run lint

      - name: Lint CSS
        run: npm run lint:css

      - name: Type check
        run: npm run type-check

  build:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --ignore-scripts

      - name: Build
        run: npm run build

  test:
    # TODO: Add on Jest 28
    # name: test (${{ matrix.shard }})
    needs: install
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    #   matrix:
    #     shard: ["1/4", "2/4", "3/4", "4/4"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --ignore-scripts

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Test
        run: >
          npm test --
          --max-workers ${{ steps.cpu-cores.outputs.count }}
          --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

  react:
    name: react-${{ matrix.react-version }}
    needs: install
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        react-version: [17, 16]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: npm-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit --ignore-scripts

      - name: Install React ${{ matrix.react-version }}
        run: >
          npm i --no-save
          react@${{ matrix.react-version }}
          react-dom@${{ matrix.react-version }}
          @testing-library/react@12

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Test
        run: npm test -- --max-workers ${{ steps.cpu-cores.outputs.count }}
