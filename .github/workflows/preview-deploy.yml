name: preview-deploy

on:
  workflow_run:
    workflows: ["main"]
    types: [completed]

jobs:
  deploy-preview-version:
    name: Deploy preview (commit)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      deployments: write
      statuses: write
    environment: Preview
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set commit status (pending)
        uses: actions/github-script@v7
        with:
          script: |
            const jobUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }}';
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.workflow_run.head_sha }}',
              state: 'pending',
              target_url: jobUrl,
              context: 'Preview (commit)'
            });

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Download app artifact
        uses: actions/download-artifact@v4
        with:
          name: app-dist
          path: site/dist
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload app version
        id: upload
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: versions upload --env preview

      - name: Set commit status (result)
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const jobUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }}';
            const deploymentUrl = '${{ steps.upload.outputs.deployment-url }}';
            const target = (state === 'success' && deploymentUrl) ? deploymentUrl : jobUrl;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.workflow_run.head_sha }}',
              state,
              target_url: target,
              context: 'Preview (commit)'
            });

  deploy-preview-branch:
    name: Deploy preview (branch)
    if: ${{ github.event.workflow_run.head_repository.full_name == github.repository }}
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-preview-${{ github.event.workflow_run.head_branch }}
      cancel-in-progress: true
    permissions:
      actions: read
      contents: read
      deployments: write
      statuses: write
    environment: Preview
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set commit status (pending)
        uses: actions/github-script@v7
        with:
          script: |
            const jobUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }}';
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.workflow_run.head_sha }}',
              state: 'pending',
              target_url: jobUrl,
              context: 'Preview (branch)'
            });

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Sanitize preview alias
        id: alias
        env:
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          SAFE=$(printf "%s" "$HEAD_BRANCH" | tr '[:upper:]' '[:lower:]' | sed -E 's#[^a-z0-9-]+#-#g' | sed -E 's#^-+##; s#-+$##')
          echo "slug=$SAFE" >> "$GITHUB_OUTPUT"

      - name: Download app artifact
        uses: actions/download-artifact@v4
        with:
          name: app-dist
          path: site/dist
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy app
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: latest
          command: >-
            ${{ github.event.workflow_run.head_branch == 'main' && 'deploy --env preview' || format('versions upload --env preview --preview-alias {0}', steps.alias.outputs.slug) || '' }}

      - name: Set commit status (result)
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const jobUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }}';
            const deploymentUrl = '${{ steps.deploy.outputs.deployment-url }}';
            const target = (state === 'success' && deploymentUrl) ? deploymentUrl : jobUrl;
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.workflow_run.head_sha }}',
              state,
              target_url: target,
              context: 'Preview (branch)'
            });
