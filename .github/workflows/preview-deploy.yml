name: preview-deploy

on:
  workflow_run:
    workflows: ["main"]
    types: [completed]

jobs:
  deploy-preview:
    name: Deploy preview
    runs-on: ubuntu-latest
    environment: Preview
    concurrency:
      group: deploy-preview-${{ github.event.workflow_run.head_branch }}
      cancel-in-progress: true
    permissions:
      actions: read
      contents: read
      deployments: write
      statuses: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set commit status (pending)
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const args = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.workflow_run.head_sha }}',
              state: 'pending',
              target_url: runUrl,
            };
            github.rest.repos.createCommitStatus({ ...args, context: 'Preview (commit)' });
            github.rest.repos.createCommitStatus({ ...args, context: 'Preview (branch)' });

      - name: Sanitize preview alias
        id: alias
        env:
          HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          SAFE=$(printf "%s" "$HEAD_BRANCH" | tr '[:upper:]' '[:lower:]' | sed -E 's#[^a-z0-9-]+#-#g' | sed -E 's#^-+##; s#-+$##')
          echo "slug=$SAFE" >> "$GITHUB_OUTPUT"

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Download app artifact
        uses: actions/download-artifact@v5
        with:
          name: app-dist
          path: site/dist
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload app version
        id: upload
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: >-
            ${{ github.event.workflow_run.head_branch == 'main' && 'deploy --env preview' || format('versions upload --env preview --preview-alias {0}', steps.alias.outputs.slug) }}

      - name: Set commit status (result)
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}' === 'success' ? 'success' : 'failure';
            const runUrl = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const deploymentUrl = '${{ steps.upload.outputs.deployment-url }}';
            const aliasUrl = 'https://${{ steps.alias.outputs.slug }}-ariakit-preview.ariakit.workers.dev/';
            const commitTarget = (state === 'success' && deploymentUrl) ? deploymentUrl : runUrl;
            const branchTarget = (state === 'success' && aliasUrl) ? aliasUrl : runUrl;
            const args = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.workflow_run.head_sha }}',
              state,
              target_url: commitTarget,
            };
            await github.rest.repos.createCommitStatus({
              ...args,
              target_url: commitTarget,
              context: 'Preview (commit)',
            });
            await github.rest.repos.createCommitStatus({
              ...args,
              target_url: branchTarget,
              context: 'Preview (branch)',
            });
