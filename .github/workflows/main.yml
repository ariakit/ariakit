name: main

on:
  push:
    branches: [main, next]
  pull_request:

jobs:
  install:
    name: Install node modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}
          restore-keys: pnpm-store-

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint

      - name: Lint CSS
        run: pnpm run lint-css

  typescript:
    name: Type check
    needs: [install, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Type check
        run: pnpm run tsc

  build:
    name: Build packages
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

  test:
    name: Test (${{ matrix.shard }})
    needs: [install, build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: ["1/2", "2/2"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Test
        run: pnpm test -- --shard ${{ matrix.shard }}

  react17:
    name: Test React 17 (${{ matrix.shard }})
    needs: [install, build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: ["1/2", "2/2"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Install React 17
        run: pnpm run react17

      - name: Test
        run: pnpm test -- --shard ${{ matrix.shard }}

  website:
    name: Build website
    needs: [install, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Cache Next.js
        uses: actions/cache@v4
        with:
          path: website/.next
          key: nextjs-${{ github.run_id }}
          restore-keys: nextjs-

      - name: Build website
        run: pnpm run build-website-lite

  app:
    name: Build app
    needs: [install, build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Build app
        run: pnpm --filter site run build-lite

      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dist
          path: site/dist
          retention-days: 7
          include-hidden-files: true

  test-chrome:
    name: Test ${{ matrix.name }}
    needs: website
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Chrome
            engine: chromium
            project: chrome
          - name: Android
            engine: chromium
            project: android
          - name: Firefox
            engine: firefox
            project: firefox
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Cache playwright
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ matrix.engine }}-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}
          restore-keys: playwright-${{ matrix.engine }}-

      - name: Install playwright
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps ${{ matrix.engine }}

      - name: Restore website
        uses: actions/cache/restore@v4
        with:
          path: website/.next
          key: nextjs-${{ github.run_id }}

      - name: Test
        id: test
        run: xvfb-run pnpm run playwright -- --project ${{ matrix.project }}

      - name: Upload test results to GitHub
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}-test-results
          path: test-results
          retention-days: 30

  test-macos:
    name: Test macOS
    needs: website
    runs-on: macos-latest
    # concurrency:
    #   group: test-macos-${{ github.head_ref || github.run_id }}
    #   cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Cache playwright
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/ms-playwright
          key: playwright-macos-${{ hashFiles('pnpm-lock.yaml', '.nvmrc') }}
          restore-keys: playwright-macos-

      - name: Install playwright
        run: npx playwright install --with-deps webkit

      - name: Restore website
        uses: actions/cache/restore@v4
        with:
          path: website/.next
          key: nextjs-${{ github.run_id }}

      - name: Test
        id: test
        run: pnpm run playwright -- --project safari --project ios

      - name: Upload test results to GitHub
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: safari-test-results
          path: test-results
          retention-days: 30
