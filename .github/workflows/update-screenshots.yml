name: update-screenshots

on:
  workflow_run:
    workflows: ["app"]
    types: [completed]

jobs:
  precheck:
    name: Precheck latest commit
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'failure'
    permissions:
      actions: read
      contents: read
    outputs:
      is_latest: ${{ steps.check_latest.outputs.is_latest }}
    steps:
      - name: Check if run is latest commit
        id: check_latest
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ARIAKIT_BOT_PAT }}
          script: |
            const run = context.payload.workflow_run;
            const [owner, repo] = run.head_repository.full_name.split("/");
            try {
              const { data } = await github.rest.repos.getBranch({
                owner,
                repo,
                branch: run.head_branch,
              });
              const latestSha = data.commit && data.commit.sha;
              core.info(`Latest sha on ${run.head_branch}: ${latestSha}`);
              core.info(`Workflow run head_sha: ${run.head_sha}`);
              const isLatest = latestSha === run.head_sha;
              core.setOutput("is_latest", String(isLatest));
            } catch (error) {
              core.warning(`Failed to fetch branch info: ${error.message}`);
              core.setOutput("is_latest", "false");
            }

  update-screenshots:
    name: Update screenshots
    needs: precheck
    if: needs.precheck.outputs.is_latest == 'true'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.workflow_run.head_repository.full_name }}
          ref: ${{ github.event.workflow_run.head_branch }}
          token: ${{ secrets.ARIAKIT_BOT_PAT }}
          persist-credentials: true

      - name: Download screenshots artifacts
        uses: actions/download-artifact@v5
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: app-screenshots-*
          merge-multiple: true
          path: site/src/tests/screenshots

      - name: Configure git
        run: |
          git config user.name "ariakit-bot"
          git config user.email "ariakit-bot@users.noreply.github.com"

      - name: Commit changes
        run: |
          git add -A site/src/tests/screenshots
          if git diff --cached --quiet --exit-code; then
            echo "No screenshots to commit."
            exit 0
          fi
          git commit -m "Update screenshots"

      - name: Push to PR head branch
        if: github.event.workflow_run.event == 'pull_request'
        run: |
          set +e
          HEAD_REF='${{ github.event.workflow_run.head_branch }}'
          git push origin HEAD:"${HEAD_REF}"
          status=$?
          if [ $status -ne 0 ]; then
            echo "Failed to push to PR head."
            exit 1
          fi

      - name: Create PR with screenshots
        if: github.event.workflow_run.event == 'push'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: Update screenshots
          title: Update screenshots
          branch: chore/update-screenshots
          delete-branch: true
          base: ${{ github.event.workflow_run.head_branch }}
          token: ${{ secrets.ARIAKIT_BOT_PAT }}
          add-paths: |
            site/src/tests/screenshots/**
