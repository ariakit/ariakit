name: app

on:
  push:
    branches: [main]
  pull_request:

jobs:
  install-linux:
    name: Install node modules on Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', '.nvmrc') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

  install-macos:
    name: Install node modules on macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json', '.nvmrc') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

  build:
    name: Build app
    needs: install-linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Build app
        run: npm run build-lite -w site

      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dist
          path: site/dist
          retention-days: 7
          include-hidden-files: true

  test:
    name: Test ${{ matrix.name }}
    needs: [build, install-macos]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: Chrome
            engine: chromium
            project: chrome
            run: xvfb-run npx playwright
            cache_path: ~/.cache/ms-playwright
          - os: ubuntu-latest
            name: Firefox
            engine: firefox
            project: firefox
            run: xvfb-run npx playwright
            cache_path: ~/.cache/ms-playwright
          # - os: ubuntu-latest
          #   name: Android
          #   engine: chromium
          #   project: android
          #   run: xvfb-run npx playwright
          #   cache_path: ~/.cache/ms-playwright
          - os: macos-latest
            name: Safari
            engine: webkit
            project: safari
            run: npx playwright
            cache_path: ~/Library/Caches/ms-playwright
          # - os: macos-latest
          #   name: iOS
          #   engine: webkit
          #   project: ios
          #   run: npx playwright
          #   cache_path: ~/Library/Caches/ms-playwright
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Cache Playwright
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ${{ matrix.cache_path }}
          key: playwright-${{ runner.os }}-${{ matrix.engine }}-${{ hashFiles('package-lock.json', '.nvmrc') }}
          restore-keys: |
            playwright-${{ runner.os }}-${{ matrix.engine }}-
            playwright-${{ runner.os }}-

      - name: Install Playwright
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps ${{ matrix.engine }}

      - name: Download app artifact
        uses: actions/download-artifact@v5
        with:
          name: app-dist
          path: site/dist

      - name: Test
        id: test
        run: ${{ matrix.run }} test -c site/playwright.config.ts --project ${{ matrix.project }}

      - name: Update snapshots for failed tests
        if: failure() && steps.test.outcome == 'failure'
        run: ${{ matrix.run }} test -c site/playwright.config.ts --last-failed -u --project ${{ matrix.project }}

      - name: Upload screenshots
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: app-screenshots-${{ matrix.project }}
          path: site/src/tests/screenshots
          if-no-files-found: ignore
          retention-days: 3

  update-screenshots:
    name: Update screenshots
    if: always()
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        # if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      # - name: Checkout repository
      #   if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository }}
      #   uses: actions/checkout@v5
      #   # with:
      #   #   fetch-depth: 0

      - name: Download screenshots artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: app-screenshots-*
          path: site/src/tests/screenshots
          merge-multiple: true

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit screenshots to pull request
        if: github.event_name == 'pull_request'
        run: |
          if [ -d site/src/tests/screenshots ]; then
            git add -A site/src/tests/screenshots
          fi
          if git diff --cached --quiet --exit-code; then
            echo "No screenshots to commit."
          else
            # Ensure we are on the correct branch
            git fetch origin "${GITHUB_HEAD_REF}:${GITHUB_HEAD_REF}"
            git checkout "${GITHUB_HEAD_REF}"
            git commit -m "Update screenshots"
            git pull --rebase origin "${GITHUB_HEAD_REF}"
            git push origin "HEAD:${GITHUB_HEAD_REF}"
          fi

      - name: Create or update PR with screenshots (main)
        if: github.event_name != 'pull_request'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Update screenshots"
          title: "Update screenshots"
          body: |
            Update screenshots generated by CI.
          branch: chore/update-screenshots-${{ github.run_id }}
          delete-branch: true
          add-paths: |
            site/src/tests/screenshots/**
