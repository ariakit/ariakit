name: app

on:
  push:
    branches: [main]
  pull_request:

jobs:
  gate:
    name: Determine workflow mode
    runs-on: ubuntu-latest
    outputs:
      is_approve_commit: ${{ steps.determine.outputs.is_approve_commit }}
      is_update_commit: ${{ steps.determine.outputs.is_update_commit }}
    steps:
      - name: Checkout PR head
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
      - name: Checkout repository
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v5
        with:
          fetch-depth: 2
      - name: Determine mode from commit message
        id: determine
        run: |
          MSG=$(git log -1 --pretty=%B)
          if echo "$MSG" | grep -qi '\[approve-visual\]'; then
            echo "is_approve_commit=true" >> $GITHUB_OUTPUT
          else
            echo "is_approve_commit=false" >> $GITHUB_OUTPUT
          fi
          if echo "$MSG" | grep -qi '\[update-visual\]'; then
            echo "is_update_commit=true" >> $GITHUB_OUTPUT
          else
            echo "is_update_commit=false" >> $GITHUB_OUTPUT
          fi
  install:
    name: Install node modules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json', '.nvmrc') }}
          restore-keys: npm-

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

  build:
    name: Build app
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Build app
        run: npm run build-lite -w site

      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dist
          path: site/dist
          retention-days: 7
          include-hidden-files: true

  test-chrome:
    name: Test ${{ matrix.name }}
    needs: [build, gate]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Chrome
            engine: chromium
            project: chrome
          # - name: Android
          #   engine: chromium
          #   project: android
          - name: Firefox
            engine: firefox
            project: firefox
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Cache playwright
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ matrix.engine }}-${{ hashFiles('package-lock.json', '.nvmrc') }}
          restore-keys: playwright-${{ matrix.engine }}-

      - name: Install playwright
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps ${{ matrix.engine }}

      - name: Download app artifact
        uses: actions/download-artifact@v5
        with:
          name: app-dist
          path: site/dist

      - name: Test
        id: test
        if: needs.gate.outputs.is_approve_commit != 'true'
        run: xvfb-run npx playwright test -c site/playwright.config.ts --project ${{ matrix.project }}

      - name: Update snapshots (approve commit)
        if: needs.gate.outputs.is_approve_commit == 'true'
        run: xvfb-run npx playwright test -u -c site/playwright.config.ts --project ${{ matrix.project }}

      - name: Upload updated snapshots
        if: needs.gate.outputs.is_approve_commit == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: updated-snapshots-${{ matrix.project }}
          path: |
            site/src/tests/screenshots/**
          retention-days: 3

      - name: Collect visual diffs summary
        if: always()
        run: node --experimental-strip-types scripts/ci-collect-site-diffs.ts > site-diff-summary.json

      - name: Upload test results to GitHub
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}-test-results
          path: site/test-results
          retention-days: 30

      - name: Upload visual diffs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-visual-diffs-${{ matrix.project }}
          path: |
            site/test-results/**
            site-diff-summary.json
          retention-days: 7

  test-macos:
    name: Test macOS
    needs: [build, gate]
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Install wrangler
        if: steps.cache-node-modules.outputs.cache-hit == 'true'
        run: npm install wrangler

      - name: Cache playwright
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/ms-playwright
          key: playwright-macos-${{ hashFiles('package-lock.json', '.nvmrc') }}
          restore-keys: playwright-macos-

      - name: Install playwright
        run: npx playwright install --with-deps webkit

      - name: Download app artifact
        uses: actions/download-artifact@v5
        with:
          name: app-dist
          path: site/dist

      - name: Test
        id: test
        if: needs.gate.outputs.is_approve_commit != 'true'
        run: npx playwright test -c site/playwright.config.ts --project safari --project ios

      - name: Update snapshots (approve commit)
        if: needs.gate.outputs.is_approve_commit == 'true'
        run: npx playwright test -u -c site/playwright.config.ts --project safari --project ios

      - name: Upload updated snapshots (safari/ios)
        if: needs.gate.outputs.is_approve_commit == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: updated-snapshots-safari
          path: |
            site/src/tests/screenshots/**
          retention-days: 3

      - name: Collect visual diffs summary
        if: always()
        run: node --experimental-strip-types scripts/ci-collect-site-diffs.ts > site-diff-summary.json

      - name: Upload test results to GitHub
        if: failure() && steps.test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: safari-test-results
          path: site/test-results
          retention-days: 30

      - name: Upload visual diffs artifact (safari)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-visual-diffs-safari
          path: |
            site/test-results/**
            site-diff-summary.json
          retention-days: 7

  visual-comment:
    name: Visual comment
    needs: [test-chrome, test-macos, gate]
    if: ${{ always() && needs.gate.outputs.is_approve_commit != 'true' && needs.gate.outputs.is_update_commit != 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
      pages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Cache node_modules
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: |
            node_modules
            site/node_modules
            packages/*/node_modules
          key: node-modules-${{ hashFiles('package-lock.json', '.nvmrc') }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      - name: Download visual diffs artifacts
        uses: actions/download-artifact@v5
        continue-on-error: true
        with:
          pattern: app-visual-diffs-*
          path: artifacts
          merge-multiple: false

      - name: Merge summaries
        id: merge
        run: |
          node -e "const fs=require('node:fs'); const path=require('node:path'); const dir='artifacts'; const outDir='public'; fs.mkdirSync(outDir,{recursive:true}); const byTest={}; if(fs.existsSync(dir)){ for(const a of fs.readdirSync(dir)){const sumPath=path.join(dir,a,'site-diff-summary.json'); if(!fs.existsSync(sumPath)) continue; const s=JSON.parse(fs.readFileSync(sumPath,'utf8')); const rewrite=(p)=>{ if(!p) return ''; const m=p.match(/[\\\/]site[\\\/]test-results[\\\/](.*)$/); if(!m) return ''; const rel=path.join('test-results',a,m[1]); const src=path.join(dir,a,'site','test-results',m[1]); const dst=path.join(outDir,rel); fs.mkdirSync(path.dirname(dst),{recursive:true}); if(fs.existsSync(src)) fs.copyFileSync(src,dst); return rel.split(path.sep).join('/'); }; for(const [suite, files] of Object.entries(s.byTest||{})){ byTest[suite] = (byTest[suite]||[]).concat(files.map(f=>({ base: rewrite(f.base), actual: rewrite(f.actual), diff: rewrite(f.diff), kind: f.kind||'changed' }))); } } } fs.writeFileSync('site-diff-summary.json', JSON.stringify({byTest}));"

      - name: Check if there are diffs
        id: check
        run: |
          node -e "const s=JSON.parse(require('fs').readFileSync('site-diff-summary.json','utf8')); console.log(Object.keys(s.byTest||{}).length ? 'has_diffs=true' : 'has_diffs=false')" >> $GITHUB_OUTPUT

      - name: Configure GitHub Pages
        if: steps.check.outputs.has_diffs == 'true' && github.event_name == 'pull_request'
        uses: actions/configure-pages@v5

      - name: Upload pages artifact (visual diffs)
        if: steps.check.outputs.has_diffs == 'true' && github.event_name == 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        if: steps.check.outputs.has_diffs == 'true' && github.event_name == 'pull_request'
        id: deploy
        uses: actions/deploy-pages@v4
        with:
          preview: true

      - name: Comment diffs
        if: steps.check.outputs.has_diffs == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          GITHUB_SHA: ${{ github.sha }}
          PAGE_URL: ${{ steps.deploy.outputs.page_url }}
        run: node --experimental-strip-types scripts/ci-comment-site-diffs.ts site-diff-summary.json

  commit-snapshots:
    name: Commit updated snapshots
    needs: [test-chrome, test-macos, gate]
    if: ${{ needs.gate.outputs.is_approve_commit == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Download updated snapshots artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: updated-snapshots-*
          path: downloaded
          merge-multiple: false
      - name: Merge snapshots into workspace
        run: |
          mkdir -p site/src/tests/screenshots
          for d in downloaded/*/site/src/tests/screenshots; do
            if [ -d "$d" ]; then
              cp -R "$d/"* site/src/tests/screenshots/ || true
            fi
          done
      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Commit updated snapshots (if any)
        run: |
          if [ -n "$(git status --porcelain site/src/tests/screenshots)" ]; then
            git add site/src/tests/screenshots
            git commit -m "chore(site): update visual snapshots [update-visual]"
            git push
          else
            echo "No visual snapshot updates to commit."
          fi
      - name: Capture new commit SHA
        id: newsha
        run: echo "new_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Update PR comment (snapshots updated)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
          UPDATE_MESSAGE: Snapshots updated in commit https://github.com/${{ github.repository }}/commit/${{ steps.newsha.outputs.new_sha }}. The workflow will rerun tests without -u.
        run: node --experimental-strip-types scripts/ci-comment-site-diffs.ts
