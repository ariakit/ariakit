@import url("./modes.css");
@import url("./tokens.css");

$colors: bg, alpha, primary, danger, warn;

html,
body {
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}

body {
  background: var(--color-bg-2);
  color: var(--color-bg-2-text);
}

.input {
  font-size: 1em;
  border: none;
  height: 2.5em;
  padding: 0 var(--space-2);
  background: var(--color-bg-1);
  color: var(--color-bg-1-text);
  border-radius: var(--radius-3);
}

.warn {
  background: var(--color-warn-1);
  color: var(--color-warn-1-text);
  padding: var(--space-2);
  border-radius: var(--radius-3);
  border-left: var(--radius-3) solid var(--color-warn-1-border);
}

.input:hover {
  background: var(--color-bg-1-hover);
}

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5em;
  font-size: 1em;
  padding: 0.5em 1em;
  border-radius: 8px;
  height: 2.5em;
  min-width: 2.5em;
  border: none;
}

*[disabled],
*[aria-disabled="true"] {
  opacity: 0.5;
}

*:focus {
  outline: none;
}

*:focus-visible,
*[data-focus-visible] {
  outline: 2px solid var(--color-focus-ring, var(--color-primary-2));
  outline-offset: 2px;
}

@for $i from 1 through 3 {
  .round-#{$i} {
    border-radius: var(--radius-#{$i});
  }
}

* {
  box-sizing: border-box;
}

a:hover {
  text-decoration: underline;
}

* {
  box-sizing: border-box;
}

p,
ul {
  margin: 0;
  line-height: 1.5;
}

code {
  @extend .bg-4, .border, .round-2;
  font-family: Menlo, monospace;
  font-size: 1em;
  padding: 0.25em;
}

a {
  color: var(--color-link);
  text-decoration: none;

  & > code {
    color: inherit;
  }
}

.playground-editor {
  max-height: calc(100vh - 500px);
}

.playground-editor .cm-scroller {
  padding-top: 8px !important;
}

.playground-preview * {
  all: revert;
  box-sizing: border-box;
}

.layer-1 {
  z-index: 100;
}

.layer-2 {
  z-index: 200;
}

.layer-3 {
  z-index: 300;
}

@mixin flex($prefix: ".") {
  #{$prefix}relative {
    position: relative;
  }

  #{$prefix}flex {
    display: flex;
  }

  #{$prefix}row {
    display: flex;
    flex-direction: row;
  }

  #{$prefix}col {
    display: flex;
    flex-direction: column;
  }

  #{$prefix}center {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #{$prefix}space-between {
    display: flex;
    justify-content: space-between;
  }

  #{$prefix}w-full {
    width: 100%;
  }

  #{$prefix}border {
    border-width: 1px;
    border-style: solid;
  }

  #{$prefix}border-t {
    border-top-width: 1px;
    border-top-style: solid;
  }

  #{$prefix}border-r {
    border-right-width: 1px;
    border-right-style: solid;
  }

  #{$prefix}border-b {
    border-bottom-width: 1px;
    border-bottom-style: solid;
  }

  #{$prefix}border-l {
    border-left-width: 1px;
    border-left-style: solid;
  }

  #{$prefix}shadow-1 {
    filter: drop-shadow(0 2px 3px var(--color-shadow));
  }

  #{$prefix}shadow-2 {
    filter: drop-shadow(0 4px 6px var(--color-shadow));
  }

  #{$prefix}shadow-3 {
    filter: drop-shadow(0 8px 12px var(--color-shadow));
  }

  @for $i from 1 through 7 {
    #{$prefix}gap-#{$i} {
      gap: var(--space-#{$i});
    }
    #{$prefix}p-#{$i} {
      padding: var(--space-#{$i});
    }
    #{$prefix}px-#{$i} {
      padding-left: var(--space-#{$i});
      padding-right: var(--space-#{$i});
    }
    #{$prefix}py-#{$i} {
      padding-top: var(--space-#{$i});
      padding-bottom: var(--space-#{$i});
    }
  }

  @for $i from 1 through 7 {
    #{$prefix}pt-#{$i} {
      padding-top: var(--space-#{$i});
    }
    #{$prefix}pr-#{$i} {
      padding-right: var(--space-#{$i});
    }
    #{$prefix}pb-#{$i} {
      padding-bottom: var(--space-#{$i});
    }
    #{$prefix}pl-#{$i} {
      padding-left: var(--space-#{$i});
    }
  }

  @each $color in $colors {
    @for $i from 1 through 4 {
      $colorName: #{$color}-#{$i};
      $selector: #{$prefix}#{$colorName};

      #{$selector} {
        background-color: var(--color-#{$colorName});
        border-color: var(--color-#{$colorName}-border);
        color: var(--color-#{$colorName}-text);
      }

      #{$selector}.button:not([aria-disabled="true"]):not([disabled]):hover,
      #{$selector}.interactive:not([aria-disabled="true"]):not([disabled]):hover {
        background-color: var(--color-#{$colorName}-hover);
      }
    }
  }
}

@include flex();

@media (max-width: 640px) {
  @include flex(".sm" + \:);
}

@media (max-width: 768px) {
  @include flex(".md" + \:);
}

@media (max-width: 1024px) {
  @include flex(".lg" + \:);
}

@media (max-width: 1280px) {
  @include flex(".xl" + \:);
}

@media (prefers-color-scheme: dark) {
  @include flex(".dark" + \:);
}

@media (prefers-color-scheme: light) {
  @include flex(".light" + \:);
}

.dark-mode {
  @include flex(".dark" + \:);
}

.light-mode {
  @include flex(".light" + \:);
}

[aria-selected="true"] {
  @include flex("&.selected" + \:);
}
