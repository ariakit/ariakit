---
import { formatDistanceToNow } from "date-fns";
import { getPlusPrice } from "#app/lib/stripe.ts";
import type { PlusType } from "#app/lib/schemas.ts";
import { createLogger } from "#app/lib/logger.ts";

export const prerender = false;

interface Props {
  type?: PlusType;
}

const { type = "personal" } = Astro.props;
const price = await getPlusPrice({ context: Astro, type });

const logger = createLogger("plus-offer");

if (!price) {
  logger.error("Price not found");
  return null;
}
if (!price.percentOff) return null;

const formattedExpirationDate = price.expiresAt
  ? new Date(price.expiresAt * 1000).toLocaleDateString("en-US", {
      month: "short",
      day: "numeric",
    })
  : null;

const timeRemaining = price.expiresAt
  ? formatDistanceToNow(price.expiresAt * 1000)
  : null;

const text = price.maxRedemptions
  ? `Limited offer (${price.maxRedemptions - price.timesRedeemed} left)`
  : formattedExpirationDate && timeRemaining
    ? `Special offer ends on ${formattedExpirationDate} (${timeRemaining} left)`
    : null;
---

{text}
