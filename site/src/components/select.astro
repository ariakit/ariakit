---
import type { ComponentProps, HTMLAttributes } from "astro/types";
import SelectOption from "./select-option.astro";

interface Props extends HTMLAttributes<"select"> {
  options?: ComponentProps<typeof SelectOption>[];
}

const { options, ...props } = Astro.props;
---

<select
  data-select
  class:list={["ak-select ak-layer-pop", props.class]}
  {...props}
>
  <slot />
  {options?.map((option) => <SelectOption {...option} />)}
</select>

<script>
  const selects = document.querySelectorAll<HTMLSelectElement>("[data-select]");

  for (const select of selects) {
    select.addEventListener("keydown", (event) => {
      if (event.key === "Enter") {
        if (event.target !== select) return;
        event.preventDefault();
        select.showPicker();
      }
    });
    select.form?.addEventListener("change", () => {
      select.form?.submit();
    });
  }
</script>
