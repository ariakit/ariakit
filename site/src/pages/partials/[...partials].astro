---
/**
 * @license
 * Copyright 2025-present Ariakit FZ-LLC. All Rights Reserved.
 *
 * This software is proprietary. See the license.md file in the root of this
 * package for licensing terms.
 *
 * SPDX-License-Identifier: UNLICENSED
 */
import ReferenceContent from "#app/components/reference-content.astro";
import ReferenceItem from "#app/components/reference-item.astro";
import { notFound } from "#app/lib/response.ts";
import {
  isReferenceURLLike,
  parseReferenceURL,
  partialURLToReferencePath,
} from "#app/lib/url.ts";
import { getCollection } from "astro:content";

export const partial = true;
export const prerender = false;

const url = partialURLToReferencePath(Astro.url);

if (!isReferenceURLLike(url)) {
  return notFound();
}

const references = await getCollection("references");
const parsedUrl = parseReferenceURL(url, references);

if (!parsedUrl) {
  return notFound("Reference or item not found");
}

const { reference, item } = parsedUrl;

Astro.locals.framework = reference.data.framework;
Astro.locals.reference = reference.id;
---

{
  item ? (
    <div class="ak-frame/2 ak-prose">
      <ReferenceItem reference={reference} {...item} standalone />
    </div>
  ) : (
    <div class="ak-frame/2 p-0">
      <ReferenceContent reference={reference} compact />
    </div>
  )
}
