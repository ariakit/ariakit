---
import { createCheckout, getPlusPrice } from "../../lib/stripe.ts";
import { clerkClient } from "@clerk/astro/server";
import { createCustomerIfNeeded } from "../../lib/clerk.ts";
import { getCurrency, getIPCountry, formatCurrency } from "../../lib/locale.ts";
import Layout2 from "../../layouts/layout2.astro";

export const prerender = false;

const user = await Astro.locals.currentUser();

if (!user) {
  return Astro.redirect("/plus/sign-up");
}

const clerk = clerkClient(Astro);
const customer = await createCustomerIfNeeded(clerk, user);

// Get country from IP address
const countryCode = getIPCountry(Astro.request.headers);
const currency = getCurrency(countryCode);

if (!customer) {
  throw new Error("Stripe ID not found");
}

const price = await getPlusPrice({
  customer,
  currency,
});

if (!price) {
  throw new Error("Plus price not found");
}

const session = await createCheckout({
  customer: customer,
  price: price.id,
  discount: price.discount,
  redirectUrl: new URL("/plus/success", Astro.url.origin),
});

if (!session) {
  throw new Error("Session not found");
}
---

<Layout2>
  <h1>Payment</h1>
  {formatCurrency(price.amount / 100, countryCode)}

  <!-- Add client_secret as a data variable -->
  <div
    id="checkout"
    data-client-secret={session.client_secret}
    style="width: 480px; padding: 1rem"
  >
  </div>

  test
</Layout2>

<script>
  import { loadStripe } from "@stripe/stripe-js";
  const checkoutDiv = document.querySelector<HTMLElement>("#checkout");

  // Get `clientSecret` from the element
  const { clientSecret } = checkoutDiv?.dataset || {};
  const stripe = await loadStripe(
    import.meta.env.PUBLIC_STRIPE_PUBLISHABLE_KEY!
  );

  console.log("stripe", stripe);

  // Return it in `fetchClientSecret`
  const checkout = await stripe?.initEmbeddedCheckout({
    clientSecret,
  });

  checkout?.mount(checkoutDiv!);
</script>
