---
/**
 * @license
 * Copyright 2025-present Ariakit FZ-LLC. All Rights Reserved.
 *
 * This software is proprietary. See the license.md file in the root of this
 * package for licensing terms.
 *
 * SPDX-License-Identifier: UNLICENSED
 */
import { InlineLink } from "#app/components/inline-link.react.tsx";
import Select from "#app/components/select.astro";
import SubmitButton from "#app/components/submit-button.astro";
import { Icon } from "#app/icons/icon.react.tsx";
import { isAdmin } from "#app/lib/auth.ts";
import { getAllPromos, getBestPromo } from "#app/lib/kv.ts";
import { actions } from "astro:actions";
import { formatDistanceToNow } from "date-fns";
import Layout from "./_layout.astro";
import {
  getClerkInstanceUrl,
  getStripeDashboardUrl,
  processFormRequest,
} from "./_utils.ts";

export const prerender = false;

if (!(await isAdmin(Astro))) {
  return Astro.redirect("/");
}

const formRequest = processFormRequest(Astro);

if (formRequest) {
  return formRequest;
}

const promos = await getAllPromos({ context: Astro, user: "any" });
const salePromos = promos.filter((promo) => promo.type === "sale");
const customerPromos = promos.filter((promo) => promo.type === "customer");
const bestPromo = await getBestPromo(salePromos);

const clerkInstanceUrl = await getClerkInstanceUrl(Astro);

// Truncate string in the middle
function truncate(str: string, maxLength: number) {
  if (str.length <= maxLength) return str;
  const halfLength = Math.floor((maxLength - 3) / 2);
  return str.slice(0, halfLength) + "..." + str.slice(-halfLength);
}
---

<Layout>
  <div class="ak-layer-down border-t min-h-[90vh]">
    <ul
      class="ak-container grid grid-cols-[repeat(auto-fill,minmax(18rem,1fr))] gap-(--ak-container-p) py-(--ak-container-p)"
    >
      <li>
        <div
          class="ak-layer ak-frame-card ak-frame-border size-full flex flex-col gap-2"
        >
          <h2 class="ak-text-lg font-medium">New promo</h2>
          <form
            method="post"
            action={actions.admin.setPromo}
            class="flex flex-col gap-2"
          >
            <div
              class="flex gap-2 text-sm flex-wrap *:flex-grow *:whitespace-nowrap"
            >
              <Select
                name="percentOff"
                class="max-w-max"
                required
                options={[
                  { label: "Percent off", value: "" },
                  { label: "5%", value: "5" },
                  { label: "10%", value: "10" },
                  { label: "15%", value: "15" },
                  { label: "20%", value: "20" },
                  { label: "25%", value: "25" },
                  { label: "30%", value: "30" },
                  { label: "35%", value: "35" },
                  { label: "40%", value: "40" },
                  { label: "45%", value: "45" },
                  { label: "50%", value: "50" },
                  { label: "55%", value: "55" },
                  { label: "60%", value: "60" },
                  { label: "65%", value: "65" },
                  { label: "70%", value: "70" },
                ]}
              />
              <label class="ak-input">
                Expires in
                <input
                  type="text"
                  inputmode="numeric"
                  name="expiresInDays"
                  pattern="^\\d+(\\.\\d+)?$"
                  placeholder="00"
                  autocomplete="off"
                  class="field-sizing-content"
                />
                days
              </label>
              <label class="ak-input">
                Up to
                <input
                  type="text"
                  inputmode="numeric"
                  name="maxRedemptions"
                  pattern="^\\d+$"
                  placeholder="00"
                  autocomplete="off"
                  class="field-sizing-content"
                />
                redemptions
              </label>
              <label class="ak-input overflow-hidden">
                For user
                <input
                  type="text"
                  name="user"
                  placeholder="user_..."
                  autocomplete="off"
                  class="field-sizing-content"
                />
              </label>
            </div>
            <div class="ak-frame-cover/1">
              <SubmitButton class="ak-button w-full ak-layer-pop"
                >Create</SubmitButton
              >
            </div>
          </form>
        </div>
      </li>
      {
        [...salePromos, ...customerPromos].map((promo) => (
          <li>
            <div class="ak-layer ak-frame-card ak-frame-border size-full flex flex-col relative">
              {promo.id == bestPromo?.id && (
                <div class="absolute top-(--ak-frame-padding) end-(--ak-frame-padding)">
                  <div class="ak-frame-cover/1">
                    <div class="ak-badge-green-500">
                      <span>Best promo</span>
                    </div>
                  </div>
                </div>
              )}
              <h2 class="ak-text-lg font-medium">{promo.percentOff}% off</h2>
              <p class="ak-text-sm">
                {promo.maxRedemptions
                  ? `${promo.timesRedeemed}/${promo.maxRedemptions} redeemed`
                  : `${promo.timesRedeemed} redeemed`}
              </p>
              {promo.expiresAt && (
                <p class="ak-text-sm">
                  Expires{" "}
                  {formatDistanceToNow(promo.expiresAt * 1000, {
                    addSuffix: true,
                  })}
                </p>
              )}
              <p class="ak-text-sm">
                {promo.user && (
                  <InlineLink
                    href={`${clerkInstanceUrl}/users/${promo.user}`}
                    newWindow
                  >
                    {truncate(promo.user, 24)}
                  </InlineLink>
                )}
              </p>
              <div class="ak-frame-cover/1 mt-auto">
                <a
                  href={`${getStripeDashboardUrl()}/promotion_codes/${promo.id}`}
                  target="_blank"
                  class="ak-button ak-layer-pop"
                >
                  View in Stripe <Icon name="newWindow" />
                </a>
              </div>
            </div>
          </li>
        ))
      }
    </ul>
  </div>
</Layout>
