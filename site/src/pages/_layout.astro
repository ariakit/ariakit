---
/**
 * @license
 * Copyright 2025-present Ariakit FZ-LLC. All Rights Reserved.
 *
 * This software is proprietary. See the license.md file in the root of this
 * package for licensing terms.
 *
 * SPDX-License-Identifier: UNLICENSED
 */
import { Icon } from "#app/icons/icon.react.tsx";
import { Logo } from "#app/icons/logo.react.tsx";
import TableOfContents from "#app/components/table-of-contents.astro";
import "#app/styles/global.css";
import "@fontsource-variable/inter";
import { ClientRouter } from "astro:transitions";
import type { MarkdownHeading } from "astro";
import Sticky from "#app/components/sticky.astro";
import Meta from "#app/components/meta.astro";

export interface Props {
  title?: string;
  headings?: MarkdownHeading[];
  toc?: boolean;
  headerBorder?: boolean;
}

const {
  title,
  headings,
  toc = !!headings?.length,
  headerBorder = false,
} = Astro.props;
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <slot name="meta">
      <Meta {title} />
    </slot>
    <ClientRouter />
  </head>
  <body
    class="ak-container-size-default/3 overflow-x-clip [--header-height:calc(--spacing(14)+1px)] [--theme-sidebar-width:--spacing(100)]"
  >
    <div class="flex">
      <div
        class="flex flex-col flex-1 @container min-h-[100dvh] overflow-x-clip"
      >
        <Sticky class="ak-container-size-default top-0 z-10">
          <header
            class:list={[
              "ak-layer-current in-data-not-stuck:bg-transparent in-has-[:popover-open_[data-table-of-contents]]:ring in-data-stuck:ring ak-light:ak-layer ak-light:in-data-not-stuck:bg-transparent",
              headerBorder ? "ring" : "",
            ]}
          >
            <div
              class="@max-overlap:ak-container-size-[100dvw] transition-[max-width] ak-container flex items-center gap-3 py-2"
            >
              <div class="flex items-center gap-2"><Logo iconOnly /></div>

              <div class="flex items-center min-w-0">
                <span
                  aria-hidden="true"
                  class="ak-layer-current -me-px ak-edge/20 border-s rotate-15 flex-none h-8 block @max-3xl:hidden has-[+button:hover]:opacity-0 has-[+button:hover]:rotate-0 transition-[opacity,rotate] delay-[50ms,0ms] not-has-[+button:hover]:delay-[0ms,50ms]"
                ></span>
                <button
                  class="ak-button font-normal ak-dark:ak-text/80 @max-3xl:hidden"
                >
                  <Icon name="react" className="flex-none" /><span>React</span>
                </button>
                <span
                  aria-hidden="true"
                  class="ak-layer-current -me-px ak-edge/20 border-s rotate-15 flex-none h-8 block @max-3xl:hidden [button:hover+&]:opacity-0 [button:hover+&]:rotate-0 has-[+button:hover]:opacity-0 has-[+button:hover]:rotate-0 transition-[opacity,rotate] delay-[50ms,0ms] not-has-[+button:hover]:not-[button:hover+&]:delay-[0ms,50ms]"
                ></span>
                <button
                  class="ak-button font-normal ak-dark:ak-text/80 min-w-0 @max-3xl:hidden"
                >
                  <span class="truncate">Examples</span>
                </button>
                <span
                  aria-hidden="true"
                  class="ak-layer-current -me-px ak-edge/20 border-s rotate-15 flex-none h-8 block [button:hover+&]:opacity-0 [button:hover+&]:rotate-0 has-[+button:hover]:opacity-0 has-[+button:hover]:rotate-0 transition-[opacity,rotate] delay-[50ms,0ms] not-has-[+button:hover]:not-[button:hover+&]:delay-[0ms,50ms]"
                ></span>
                <button class="ak-button min-w-0">
                  <span class="truncate">{title}</span>
                  <span class="ak-text/0 font-normal">âŒ˜K</span>
                </button>
              </div>
              <div class="flex items-center gap-2 ms-auto">
                {
                  headings && headings.length > 0 && toc && (
                    <div class="@3xl:hidden">
                      <button
                        class="ak-button ak-button-square-10"
                        popovertarget="mobile-toc"
                        aria-label="Table of contents"
                      >
                        <Icon name="list" />
                      </button>
                      <div
                        id="mobile-toc"
                        aria-labelledby="mobile-toc-title"
                        popover
                        class="in-has-[#theme-sidebar[data-state=open]]:end-(--theme-sidebar-width) fixed ak-layer-current starting:translate-x-full not-open:translate-x-full transition-discrete transition-[display,translate,overlay] start-auto h-[calc(100dvh-var(--header-height))] pe-3 pt-4 pb-8 box-border end-0 top-(--header-height) border-s"
                      >
                        <h2
                          class="ak-text/0 font-medium text-sm pb-3 px-6"
                          id="mobile-toc-title"
                        >
                          On this page
                        </h2>
                        <TableOfContents
                          {title}
                          {headings}
                          class="h-max border-none"
                        />
                      </div>
                    </div>
                  )
                }
                <a
                  href="/plus"
                  class="ak-button ak-frame-field/1 hover:ak-layer-mix-primary/20"
                >
                  <span
                    class="ak-badge-primary border-dashed ak-frame-border ak-frame-field/2 text-sm"
                  >
                    <span>Plus</span>
                  </span>
                </a>
                <button
                  id="theme-toggle"
                  class="ak-button font-normal text-sm group/theme @max-4xl:ak-button-square-10"
                >
                  <div
                    class="flex-none ak-layer rounded-full p-1 border-white bg-clip-padding bg-conic/decreasing from-violet-500 via-lime-500 to-violet-500"
                  >
                    <div class="ak-layer-current rounded-full size-[0.4em]">
                    </div>
                  </div>
                  <span class="@max-4xl:sr-only">Theme</span>
                  <kbd class="ak-text/0 font-normal @max-4xl:hidden">T</kbd>
                </button>
              </div>
            </div>
          </header>
        </Sticky>
        <main
          class="@max-5xl:[--container-sidebar:16rem] @max-7xl:[--container-sidebar:20rem] scroll-mt-(--header-height)"
          id="main"
        >
          <slot />
        </main>
        <footer class="ak-container-size-default ak-layer-down mt-auto">
          <div class="ak-container">Footer</div>
        </footer>
      </div>
      <div
        id="theme-sidebar"
        data-state="closed"
        transition:persist
        class="hidden data-[state=open]:block sticky w-(--theme-sidebar-width) h-[100dvh] top-0 z-10 ak-layer-current border-s -ms-px flex-none not-data-view-transitioning:starting:w-0 data-[state=closed]:w-0 transition-discrete transition-[display,width,min-width]"
      >
        dsadas
      </div>
    </div>
  </body>
</html>

<script>
  const themeToggle = document.getElementById("theme-toggle");
  const themeSidebar = document.getElementById("theme-sidebar");

  themeToggle?.addEventListener("click", () => {
    if (!themeSidebar) return;
    console.log("clicked", themeSidebar.dataset.state);
    themeSidebar.dataset.state =
      themeSidebar.dataset.state !== "open" ? "open" : "closed";
  });

  document.addEventListener("keydown", (e) => {
    if (e.metaKey || e.ctrlKey || e.altKey || e.shiftKey) return;
    if (e.key === "t" || e.key === "T") {
      if (!themeSidebar) return;
      console.log("clicked", themeSidebar.dataset.state);
      themeSidebar.dataset.state =
        themeSidebar.dataset.state !== "open" ? "open" : "closed";
    }
  });

  // Mark the sidebar as transitioning during view transitions
  document.addEventListener("astro:before-preparation", () => {
    if (!themeSidebar) return;
    themeSidebar.setAttribute("data-view-transitioning", "true");
  });

  document.addEventListener("astro:after-swap", () => {
    requestAnimationFrame(() => {
      if (!themeSidebar) return;
      themeSidebar.removeAttribute("data-view-transitioning");
    });
  });
</script>
