---
/**
 * @license
 * Copyright 2025-present Ariakit FZ-LLC. All Rights Reserved.
 *
 * This software is proprietary. See the license.md file in the root of this
 * package for licensing terms.
 *
 * SPDX-License-Identifier: UNLICENSED
 */
import ContainerLeftMenu from "#app/components/container-left-menu.astro";
import ContainerRightMenu from "#app/components/container-right-menu.astro";
import { components } from "#app/components/content-components.astro";
import Meta from "#app/components/meta.astro";
import SidebarMenu from "#app/components/sidebar-menu.astro";
import TableOfContents from "#app/components/table-of-contents.astro";
import { filterGuidesByGroup, getGuideDetail } from "#app/lib/content.ts";
import Layout from "#app/pages/_layout.astro";
import type { GetStaticPaths } from "astro";
import { getCollection, render } from "astro:content";

export const getStaticPaths = (async () => {
  const entries = await getCollection("guides");
  return entries.flatMap((entry) => {
    const { path, framework, groupLabel, groupPath, type } =
      getGuideDetail(entry);
    return {
      params: { guide: path },
      props: { entry, framework, groupLabel, groupPath, type },
    };
  });
}) satisfies GetStaticPaths;

const { entry, groupLabel, groupPath, framework, type } = Astro.props;
const { Content, headings } = await render(entry);

const guides = (
  await getCollection("guides", filterGuidesByGroup(groupPath))
).map(getGuideDetail);

if (framework) {
  Astro.locals.framework = framework;
}

const title = entry.data.title;
---

<Layout title={title} headerBorder>
  <Meta
    slot="meta"
    id={entry.id}
    {framework}
    {type}
    {title}
    description={entry.data.description}
  />
  <ContainerLeftMenu>
    <SidebarMenu
      items={[
        { label: groupLabel, href: `${groupPath}/#tags` },
        { label: "Guides" },
        ...guides.map((guide) => ({
          label: guide.data.title,
          href: guide.path,
        })),
      ]}
    />
    <div data-content="true" class="ak-layer-current">
      <div class="@container min-h-[200dvh]">
        <ContainerRightMenu>
          <Fragment slot="heading">
            <h1 class="text-4xl font-semibold">{entry.data.title}</h1>
            <div class="ak-text/60 text-lg/loose">
              {entry.data.description}
            </div>
          </Fragment>
        </ContainerRightMenu>
        <ContainerRightMenu>
          <Content slot="prose" {framework} {components} />
          <TableOfContents
            slot="sidebar"
            headings={headings}
            title={entry.data.title}
            class="sticky [--top:calc(var(--header-height)+--spacing(8))] top-(--top) max-h-[calc(100dvh-var(--top))] overflow-y-auto"
          />
        </ContainerRightMenu>
      </div>
    </div>
  </ContainerLeftMenu>
</Layout>
